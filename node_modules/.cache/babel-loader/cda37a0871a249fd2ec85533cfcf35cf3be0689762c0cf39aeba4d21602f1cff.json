{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Le Roy\\\\React Fundamentals\\\\my-app\\\\src\\\\NavBar.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NavBar(props) {\n  const toggleMode = () => {\n    props.setBackground(background => {\n      return background.lightMode === true ? {\n        ...background,\n        lightMode: false,\n        darkMode: true\n      } : {\n        ...background,\n        lightMode: true,\n        darkMode: false\n      };\n    });\n    const body = document.getElementById('body');\n    body.style.backgroundColor = 'rgba(40, 31, 31)';\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    style: {\n      borderBottom: props.background.lightMode === true ? '3px solid whitesmoke' : 'none',\n      background: props.background.darkMode === true ? 'black' : 'white'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"./images/react-logo.png\",\n      className: \"logo\",\n      alt: \"react logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"logo-text\",\n      children: \"ReactFacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-outer-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lightmode-text\",\n        style: {\n          color: props.background.lightMode === true ? 'black' : 'white'\n        },\n        children: \"light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-inner-container\",\n        style: {\n          background: props.background.lightMode === true ? 'black' : 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mode-button\",\n          onClick: toggleMode,\n          style: {\n            marginLeft: props.background.lightMode === true ? 0 : 'auto',\n            height: '20px',\n            width: '20px',\n            display: 'block',\n            background: props.background.lightMode === true ? 'white' : 'black'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"darkmode-text\",\n        style: {\n          color: props.background.lightMode === true ? 'black' : 'white'\n        },\n        children: \"dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = NavBar;\n;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["NavBar","props","toggleMode","setBackground","background","lightMode","darkMode","body","document","getElementById","style","backgroundColor","_jsxDEV","className","borderBottom","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","marginLeft","height","width","display","_c","$RefreshReg$"],"sources":["C:/Users/Le Roy/React Fundamentals/my-app/src/NavBar.js"],"sourcesContent":["export default function NavBar(props) {\r\n  const toggleMode = () => {\r\n    props.setBackground(background => {\r\n        return background.lightMode === true ?\r\n        { \r\n            ...background,\r\n             lightMode: false,\r\n             darkMode: true\r\n         }\r\n        :\r\n        { \r\n            ...background, \r\n            lightMode: true,\r\n            darkMode: false\r\n        }\r\n    });\r\n    const body = document.getElementById('body');\r\n    body.style.backgroundColor = 'rgba(40, 31, 31)';\r\n  };\r\n\r\n  return (\r\n    <header \r\n        className=\"header\"\r\n        style={{\r\n            borderBottom: props.background.lightMode === true ?\r\n            '3px solid whitesmoke': 'none',\r\n            background: props.background.darkMode === true ? 'black': 'white'\r\n        }}\r\n    >\r\n        <img src='./images/react-logo.png' className=\"logo\" alt=\"react logo\"/>\r\n        <h2 className=\"logo-text\">ReactFacts</h2>\r\n        <div className=\"button-outer-container\">\r\n            <p \r\n                className=\"lightmode-text\"\r\n                style={{\r\n                    color: props.background.lightMode === true ? 'black': 'white'\r\n                }}\r\n            >\r\n                light\r\n            </p>\r\n            <div \r\n                className=\"button-inner-container\"\r\n                style={{\r\n                    background: props.background.lightMode === true ?\r\n                    'black': 'white'\r\n                }}\r\n            >\r\n                <button\r\n                    className=\"mode-button\"\r\n                    onClick={toggleMode}\r\n                    style={{\r\n                        marginLeft: props.background.lightMode === true ?\r\n                        0: 'auto',\r\n                        height: '20px',\r\n                        width: '20px',\r\n                        display: 'block',\r\n                        background: props.background.lightMode === true ? 'white': 'black',\r\n                        \r\n                    }}\r\n                >\r\n                </button>\r\n            </div>\r\n            <p \r\n                className=\"darkmode-text\"\r\n                style={{\r\n                    color: props.background.lightMode === true ? 'black': 'white'\r\n                }}\r\n            >\r\n                dark\r\n            </p>\r\n        </div>\r\n    </header>\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}