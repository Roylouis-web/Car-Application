{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport default function HostCars() {\n  _s();\n  const [cars, setCars] = useState([]);\n  useEffect(() => {\n    const getCars = async () => {\n      try {\n        const res = await fetch(\"/api/cars\");\n        const data = await res.json();\n        setCars(data.cars);\n      } catch (err) {\n        if (err) {\n          throw new Error(\"Something went wrong...\");\n        }\n      }\n    };\n    getCars();\n  });\n  console.log(cars);\n}\n_s(HostCars, \"/EQt6wAxOgtQYDavlJ/SWb5B/tI=\");\n_c = HostCars;\n;\nvar _c;\n$RefreshReg$(_c, \"HostCars\");","map":{"version":3,"names":["useEffect","useState","HostCars","_s","cars","setCars","getCars","res","fetch","data","json","err","Error","console","log","_c","$RefreshReg$"],"sources":["C:/Users/Le Roy/React Fundamentals/my-app/src/pages/Host/HostCars.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport default function HostCars() {\r\n  const [cars, setCars] = useState([]);\r\n  useEffect(() => {\r\n    const getCars = async () => {\r\n      try {\r\n        const res = await fetch(\"/api/cars\");\r\n        const data = await res.json();\r\n        setCars(data.cars);\r\n      } catch(err) {\r\n        if (err) {\r\n          throw new Error(\"Something went wrong...\");\r\n        }\r\n      }\r\n    };\r\n    getCars();\r\n  });\r\n  console.log(cars);\r\n \r\n};"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpCD,SAAS,CAAC,MAAM;IACd,MAAMM,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,WAAW,CAAC;QACpC,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;QAC7BL,OAAO,CAACI,IAAI,CAACL,IAAI,CAAC;MACpB,CAAC,CAAC,OAAMO,GAAG,EAAE;QACX,IAAIA,GAAG,EAAE;UACP,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;QAC5C;MACF;IACF,CAAC;IACDN,OAAO,EAAE;EACX,CAAC,CAAC;EACFO,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;AAEnB;AAACD,EAAA,CAlBuBD,QAAQ;AAAAa,EAAA,GAARb,QAAQ;AAkB/B;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}