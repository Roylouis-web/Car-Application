{"ast":null,"code":"'use strict';\n\n/**\n * Safely send data over XHR.\n *\n * @param {XHR} xhr The XHR object that we should send.\n * @param {Mixed} data The data that needs to be send.\n * @param {Function} fn Send callback.\n * @returns {Boolean} Successful sending\n * @api public\n */\nmodule.exports = function send(xhr, data, fn) {\n  //\n  // @TODO detect binary data.\n  // @TODO polyfill sendAsBinary (firefoxy only)?\n  //\n  try {\n    xhr.send(data);\n  } catch (e) {\n    return fn(e), false;\n  }\n\n  //\n  // Call the completion callback __after__ the try catch to prevent unwanted\n  // and extended try wrapping.\n  //\n  return fn(), true;\n};","map":{"version":3,"names":["module","exports","send","xhr","data","fn","e"],"sources":["C:/Users/Le Roy/node_modules/xhr-send/index.js"],"sourcesContent":["'use strict';\n\n/**\n * Safely send data over XHR.\n *\n * @param {XHR} xhr The XHR object that we should send.\n * @param {Mixed} data The data that needs to be send.\n * @param {Function} fn Send callback.\n * @returns {Boolean} Successful sending\n * @api public\n */\nmodule.exports = function send(xhr, data, fn) {\n  //\n  // @TODO detect binary data.\n  // @TODO polyfill sendAsBinary (firefoxy only)?\n  //\n  try { xhr.send(data); }\n  catch (e) { return fn(e), false; }\n\n  //\n  // Call the completion callback __after__ the try catch to prevent unwanted\n  // and extended try wrapping.\n  //\n  return fn(), true;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAO,GAAG,SAASC,IAAIA,CAACC,GAAG,EAAEC,IAAI,EAAEC,EAAE,EAAE;EAC5C;EACA;EACA;EACA;EACA,IAAI;IAAEF,GAAG,CAACD,IAAI,CAACE,IAAI,CAAC;EAAE,CAAC,CACvB,OAAOE,CAAC,EAAE;IAAE,OAAOD,EAAE,CAACC,CAAC,CAAC,EAAE,KAAK;EAAE;;EAEjC;EACA;EACA;EACA;EACA,OAAOD,EAAE,EAAE,EAAE,IAAI;AACnB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}