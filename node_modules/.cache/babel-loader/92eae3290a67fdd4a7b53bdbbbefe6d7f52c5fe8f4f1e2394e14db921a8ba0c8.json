{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Le Roy\\\\React Fundamentals\\\\my-app\\\\src\\\\Meme.js\";\nimport React from \"react\";\nimport { memeApiObject } from \"./memeData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst arrayOfMemeObjects = memeApiObject.data.memes.map(meme => meme);\nconst size = arrayOfMemeObjects.length;\nlet url;\nconsole.log(url);\nconst [picture, setPicture] = React.useState(arrayOfMemeObjects[Math.floor(Math.random() * size)].url);\nsetPicture(prev => arrayOfMemeObjects[Math.floor(Math.random() * size)].url);\nurl = picture;\nconsole.log(url);\nexport default function Meme() {\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"first-input\",\n        placeholder: \"Shut up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"second-input\",\n        placeholder: \"and take my money\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Get a new meme image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDCBC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: url,\n        alt: \"react\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = Meme;\n;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","memeApiObject","jsxDEV","_jsxDEV","arrayOfMemeObjects","data","memes","map","meme","size","length","url","console","log","picture","setPicture","useState","Math","floor","random","prev","Meme","children","className","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Le Roy/React Fundamentals/my-app/src/Meme.js"],"sourcesContent":["import React from \"react\";\r\nimport { memeApiObject } from \"./memeData\";\r\nconst arrayOfMemeObjects = memeApiObject.data.memes.map(meme => meme);\r\nconst size = arrayOfMemeObjects.length;\r\nlet url;\r\nconsole.log(url);\r\n  const [picture, setPicture] = React.useState(arrayOfMemeObjects[Math.floor(Math.random() * size)].url);\r\n  setPicture((prev) => arrayOfMemeObjects[Math.floor(Math.random() * size)].url);\r\n  url = picture;\r\n  console.log(url);\r\n\r\nexport default function Meme() {\r\n  return (\r\n    <main>\r\n      <div className=\"form\">\r\n        <input type=\"text\" className='first-input' placeholder='Shut up'/>\r\n        <input type=\"text\" className='second-input' placeholder='and take my money'/>\r\n        <button>\r\n          <p>Get a new meme image</p>\r\n          <span>ðŸ’¼</span>\r\n        </button>\r\n        <img src={url} alt='react' />\r\n      </div>\r\n    </main>\r\n  );\r\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3C,MAAMC,kBAAkB,GAAGH,aAAa,CAACI,IAAI,CAACC,KAAK,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAAC;AACrE,MAAMC,IAAI,GAAGL,kBAAkB,CAACM,MAAM;AACtC,IAAIC,GAAG;AACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;AACd,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGf,KAAK,CAACgB,QAAQ,CAACZ,kBAAkB,CAACa,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGV,IAAI,CAAC,CAAC,CAACE,GAAG,CAAC;AACtGI,UAAU,CAAEK,IAAI,IAAKhB,kBAAkB,CAACa,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGV,IAAI,CAAC,CAAC,CAACE,GAAG,CAAC;AAC9EA,GAAG,GAAGG,OAAO;AACbF,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;AAElB,eAAe,SAASU,IAAIA,CAAA,EAAG;EAC7B,oBACElB,OAAA;IAAAmB,QAAA,eACEnB,OAAA;MAAKoB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACnBnB,OAAA;QAAOqB,IAAI,EAAC,MAAM;QAACD,SAAS,EAAC,aAAa;QAACE,WAAW,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAClE1B,OAAA;QAAOqB,IAAI,EAAC,MAAM;QAACD,SAAS,EAAC,cAAc;QAACE,WAAW,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAC7E1B,OAAA;QAAAmB,QAAA,gBACEnB,OAAA;UAAAmB,QAAA,EAAG;QAAoB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI,eAC3B1B,OAAA;UAAAmB,QAAA,EAAM;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACR,eACT1B,OAAA;QAAK2B,GAAG,EAAEnB,GAAI;QAACoB,GAAG,EAAC;MAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACzB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEX;AAACG,EAAA,GAduBX,IAAI;AAc3B;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}