{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Le Roy\\\\React Fundamentals\\\\my-app\\\\src\\\\NavBar.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NavBar(props) {\n  const toggleMode = () => {\n    props.setBackground(background => {\n      return background.lightMode === true ? {\n        ...background,\n        lightMode: false,\n        darkMode: true\n      } : {\n        ...background,\n        lightMode: true,\n        darkMode: false\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    style: {\n      borderBottom: props.background.lightMode === true ? '3px solid grey' : 'none'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"logo\",\n      alt: \"react logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"logo-text\",\n      children: \"ReactFacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-outer-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lightmode-text\",\n        children: \"light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-inner-container\",\n        style: {\n          background: props.background.lightMode === true ? 'black' : 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mode-button\",\n          onClick: toggleMode,\n          style: {\n            marginLeft: props.background.lightMode === true ? 0 : 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"darkmode-text\",\n        children: \"dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = NavBar;\n;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["NavBar","props","toggleMode","setBackground","background","lightMode","darkMode","_jsxDEV","className","style","borderBottom","children","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Le Roy/React Fundamentals/my-app/src/NavBar.js"],"sourcesContent":["export default function NavBar(props) {\r\n  const toggleMode = () => {\r\n    props.setBackground(background => {\r\n        return background.lightMode === true ?\r\n        { \r\n            ...background,\r\n             lightMode: false,\r\n             darkMode: true\r\n         }\r\n        :\r\n        { \r\n            ...background, \r\n            lightMode: true,\r\n            darkMode: false\r\n        }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <header \r\n        className=\"header\"\r\n        style={{\r\n            borderBottom: props.background.lightMode === true ?\r\n            '3px solid grey': 'none'\r\n        }}\r\n    >\r\n        <img className=\"logo\" alt=\"react logo\"/>\r\n        <h2 className=\"logo-text\">ReactFacts</h2>\r\n        <div className=\"button-outer-container\">\r\n            <p className=\"lightmode-text\">light</p>\r\n            <div \r\n                className=\"button-inner-container\"\r\n                style={{\r\n                    background: props.background.lightMode === true ?\r\n                    'black': 'white'\r\n                }}\r\n            >\r\n                <button\r\n                    className=\"mode-button\"\r\n                    onClick={toggleMode}\r\n                    style={{\r\n                        marginLeft: props.background.lightMode === true ?\r\n                        0: 'auto'\r\n                    }}\r\n                >\r\n                </button>\r\n            </div>\r\n            <p className=\"darkmode-text\">dark</p>\r\n        </div>\r\n    </header>\r\n  );\r\n};"],"mappings":";;AAAA,eAAe,SAASA,MAAMA,CAACC,KAAK,EAAE;EACpC,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBD,KAAK,CAACE,aAAa,CAACC,UAAU,IAAI;MAC9B,OAAOA,UAAU,CAACC,SAAS,KAAK,IAAI,GACpC;QACI,GAAGD,UAAU;QACZC,SAAS,EAAE,KAAK;QAChBC,QAAQ,EAAE;MACd,CAAC,GAEF;QACI,GAAGF,UAAU;QACbC,SAAS,EAAE,IAAI;QACfC,QAAQ,EAAE;MACd,CAAC;IACL,CAAC,CAAC;EACJ,CAAC;EAED,oBACEC,OAAA;IACIC,SAAS,EAAC,QAAQ;IAClBC,KAAK,EAAE;MACHC,YAAY,EAAET,KAAK,CAACG,UAAU,CAACC,SAAS,KAAK,IAAI,GACjD,gBAAgB,GAAE;IACtB,CAAE;IAAAM,QAAA,gBAEFJ,OAAA;MAAKC,SAAS,EAAC,MAAM;MAACI,GAAG,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACxCT,OAAA;MAAIC,SAAS,EAAC,WAAW;MAAAG,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACzCT,OAAA;MAAKC,SAAS,EAAC,wBAAwB;MAAAG,QAAA,gBACnCJ,OAAA;QAAGC,SAAS,EAAC,gBAAgB;QAAAG,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eACvCT,OAAA;QACIC,SAAS,EAAC,wBAAwB;QAClCC,KAAK,EAAE;UACHL,UAAU,EAAEH,KAAK,CAACG,UAAU,CAACC,SAAS,KAAK,IAAI,GAC/C,OAAO,GAAE;QACb,CAAE;QAAAM,QAAA,eAEFJ,OAAA;UACIC,SAAS,EAAC,aAAa;UACvBS,OAAO,EAAEf,UAAW;UACpBO,KAAK,EAAE;YACHS,UAAU,EAAEjB,KAAK,CAACG,UAAU,CAACC,SAAS,KAAK,IAAI,GAC/C,CAAC,GAAE;UACP;QAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAEG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACP,eACNT,OAAA;QAAGC,SAAS,EAAC,eAAe;QAAAG,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEb;AAACG,EAAA,GAnDuBnB,MAAM;AAmD7B;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}