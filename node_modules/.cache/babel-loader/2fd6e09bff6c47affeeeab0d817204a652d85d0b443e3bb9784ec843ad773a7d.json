{"ast":null,"code":"'use strict';\n\n/**\n * Get the correct status code for a given XHR request.\n *\n * @param {XHR} xhr A XHR request who's status code needs to be retrieved.\n * @returns {Object}\n * @api public\n */\nmodule.exports = function status(xhr) {\n  var local = /^file:/.test(xhr.responseURL),\n    code = xhr.status,\n    text = '';\n\n  //\n  // Older version IE incorrectly return status code 1233 for requests that\n  // respond with a 204 header.\n  //\n  // @see http://stackoverflow.com/q/10046972\n  //\n  if (1233 === code) return {\n    error: false,\n    text: 'OK',\n    code: 204\n  };\n\n  //\n  // If you make a request with a file:// protocol it returns status code 0 by\n  // default so we're going to assume 200 instead. But if you do a HTTP request\n  // to dead server you will also get the same 0 response code in chrome. So\n  // we're going to assume statusCode 200 for local files.\n  //\n  if (0 === code) return local ? {\n    error: false,\n    text: 'OK',\n    code: 200\n  } : {\n    error: true,\n    text: 'An unknown error occured',\n    code: 0\n  };\n\n  //\n  // FireFox will throw an error when accessing the statusText on faulty\n  // cross-domain requests.\n  //\n  try {\n    text = xhr.statusText;\n  } catch (e) {}\n  return {\n    error: code >= 400,\n    text: text,\n    code: code\n  };\n};","map":{"version":3,"names":["module","exports","status","xhr","local","test","responseURL","code","text","error","statusText","e"],"sources":["C:/Users/Le Roy/node_modules/xhr-status/index.js"],"sourcesContent":["'use strict';\n\n/**\n * Get the correct status code for a given XHR request.\n *\n * @param {XHR} xhr A XHR request who's status code needs to be retrieved.\n * @returns {Object}\n * @api public\n */\nmodule.exports = function status(xhr) {\n  var local = /^file:/.test(xhr.responseURL)\n    , code = xhr.status\n    , text = '';\n\n  //\n  // Older version IE incorrectly return status code 1233 for requests that\n  // respond with a 204 header.\n  //\n  // @see http://stackoverflow.com/q/10046972\n  //\n  if (1233 === code) return {\n    error: false,\n    text: 'OK',\n    code: 204\n  };\n\n  //\n  // If you make a request with a file:// protocol it returns status code 0 by\n  // default so we're going to assume 200 instead. But if you do a HTTP request\n  // to dead server you will also get the same 0 response code in chrome. So\n  // we're going to assume statusCode 200 for local files.\n  //\n  if (0 === code) return local ? {\n    error: false,\n    text: 'OK',\n    code: 200\n  } : {\n    error: true,\n    text: 'An unknown error occured',\n    code: 0\n  };\n\n  //\n  // FireFox will throw an error when accessing the statusText on faulty\n  // cross-domain requests.\n  //\n  try { text = xhr.statusText; }\n  catch (e) {}\n\n  return {\n    error: code >= 400,\n    text: text,\n    code: code\n  };\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAO,GAAG,SAASC,MAAMA,CAACC,GAAG,EAAE;EACpC,IAAIC,KAAK,GAAG,QAAQ,CAACC,IAAI,CAACF,GAAG,CAACG,WAAW,CAAC;IACtCC,IAAI,GAAGJ,GAAG,CAACD,MAAM;IACjBM,IAAI,GAAG,EAAE;;EAEb;EACA;EACA;EACA;EACA;EACA;EACA,IAAI,IAAI,KAAKD,IAAI,EAAE,OAAO;IACxBE,KAAK,EAAE,KAAK;IACZD,IAAI,EAAE,IAAI;IACVD,IAAI,EAAE;EACR,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA,IAAI,CAAC,KAAKA,IAAI,EAAE,OAAOH,KAAK,GAAG;IAC7BK,KAAK,EAAE,KAAK;IACZD,IAAI,EAAE,IAAI;IACVD,IAAI,EAAE;EACR,CAAC,GAAG;IACFE,KAAK,EAAE,IAAI;IACXD,IAAI,EAAE,0BAA0B;IAChCD,IAAI,EAAE;EACR,CAAC;;EAED;EACA;EACA;EACA;EACA,IAAI;IAAEC,IAAI,GAAGL,GAAG,CAACO,UAAU;EAAE,CAAC,CAC9B,OAAOC,CAAC,EAAE,CAAC;EAEX,OAAO;IACLF,KAAK,EAAEF,IAAI,IAAI,GAAG;IAClBC,IAAI,EAAEA,IAAI;IACVD,IAAI,EAAEA;EACR,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}