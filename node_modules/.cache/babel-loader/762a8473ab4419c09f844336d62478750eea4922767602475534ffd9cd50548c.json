{"ast":null,"code":"'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Return an object with all the information that should be in the JSON output.\n * It doesn't matter if we list keys that might not be in the err as the\n * JSON.stringify will remove properties who's values are set to `undefined`. So\n * we want to make sure that we include some common properties.\n *\n * @returns {Object}\n * @api public\n */\nfunction toJSON() {\n  var obj = {\n      message: this.message,\n      stack: this.stack\n    },\n    key;\n  for (key in this) {\n    if (has.call(this, key) && 'function' !== typeof this[key]) {\n      obj[key] = this[key];\n    }\n  }\n  return obj;\n}\n\n/**\n * Generate a custom wrapped error object.\n *\n * @param {String|Error} err Error that needs to have additional properties.\n * @param {Object} props Addition properties for the Error.\n * @returns {Error} The generated or returned Error instance\n * @api public\n */\nmodule.exports = function failure(err, props) {\n  if (!err) err = 'Unspecified error';\n  if ('string' === typeof err) err = new Error(err);\n  if (props) for (var prop in props) {\n    if (!(prop in err) && has.call(props, prop)) {\n      err[prop] = props[prop];\n    }\n  }\n\n  //\n  // Add a custom `toJSON` method so we can generate a useful output when\n  // running these objects through JSON.stringify.\n  //\n  if ('function' !== typeof err.toJSON) err.toJSON = toJSON;\n  return err;\n};","map":{"version":3,"names":["has","Object","prototype","hasOwnProperty","toJSON","obj","message","stack","key","call","module","exports","failure","err","props","Error","prop"],"sources":["C:/Users/Le Roy/node_modules/failure/index.js"],"sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Return an object with all the information that should be in the JSON output.\n * It doesn't matter if we list keys that might not be in the err as the\n * JSON.stringify will remove properties who's values are set to `undefined`. So\n * we want to make sure that we include some common properties.\n *\n * @returns {Object}\n * @api public\n */\nfunction toJSON() {\n  var obj =  { message: this.message, stack: this.stack }, key;\n\n  for (key in this) {\n    if (\n         has.call(this, key)\n      && 'function' !== typeof this[key]\n    ) {\n      obj[key] = this[key];\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Generate a custom wrapped error object.\n *\n * @param {String|Error} err Error that needs to have additional properties.\n * @param {Object} props Addition properties for the Error.\n * @returns {Error} The generated or returned Error instance\n * @api public\n */\nmodule.exports = function failure(err, props) {\n  if (!err) err = 'Unspecified error';\n  if ('string' === typeof err) err = new Error(err);\n\n  if (props) for (var prop in props) {\n    if (!(prop in err) && has.call(props, prop)) {\n      err[prop] = props[prop];\n    }\n  }\n\n  //\n  // Add a custom `toJSON` method so we can generate a useful output when\n  // running these objects through JSON.stringify.\n  //\n  if ('function' !== typeof err.toJSON) err.toJSON = toJSON;\n  return err;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,GAAG,GAAGC,MAAM,CAACC,SAAS,CAACC,cAAc;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,MAAMA,CAAA,EAAG;EAChB,IAAIC,GAAG,GAAI;MAAEC,OAAO,EAAE,IAAI,CAACA,OAAO;MAAEC,KAAK,EAAE,IAAI,CAACA;IAAM,CAAC;IAAEC,GAAG;EAE5D,KAAKA,GAAG,IAAI,IAAI,EAAE;IAChB,IACKR,GAAG,CAACS,IAAI,CAAC,IAAI,EAAED,GAAG,CAAC,IACnB,UAAU,KAAK,OAAO,IAAI,CAACA,GAAG,CAAC,EAClC;MACAH,GAAG,CAACG,GAAG,CAAC,GAAG,IAAI,CAACA,GAAG,CAAC;IACtB;EACF;EAEA,OAAOH,GAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAK,MAAM,CAACC,OAAO,GAAG,SAASC,OAAOA,CAACC,GAAG,EAAEC,KAAK,EAAE;EAC5C,IAAI,CAACD,GAAG,EAAEA,GAAG,GAAG,mBAAmB;EACnC,IAAI,QAAQ,KAAK,OAAOA,GAAG,EAAEA,GAAG,GAAG,IAAIE,KAAK,CAACF,GAAG,CAAC;EAEjD,IAAIC,KAAK,EAAE,KAAK,IAAIE,IAAI,IAAIF,KAAK,EAAE;IACjC,IAAI,EAAEE,IAAI,IAAIH,GAAG,CAAC,IAAIb,GAAG,CAACS,IAAI,CAACK,KAAK,EAAEE,IAAI,CAAC,EAAE;MAC3CH,GAAG,CAACG,IAAI,CAAC,GAAGF,KAAK,CAACE,IAAI,CAAC;IACzB;EACF;;EAEA;EACA;EACA;EACA;EACA,IAAI,UAAU,KAAK,OAAOH,GAAG,CAACT,MAAM,EAAES,GAAG,CAACT,MAAM,GAAGA,MAAM;EACzD,OAAOS,GAAG;AACZ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}